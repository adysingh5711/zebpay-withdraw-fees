name: Deploy to GitHub Pages

on:
  # Deploy on push to main branch
  push:
    branches: [main]
    paths:
      - "src/**"
      - "public/**"
      - "styles/**"
      - "components/**"
      - "pages/**"
      - "app/**"
      - "next.config.js"
      - "package.json"
      - "tailwind.config.js"
      - "tsconfig.json"

  # Allow manual trigger
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18"
          cache: "npm"

      - name: Cache Next.js build
        uses: actions/cache@v4
        with:
          path: .next/cache
          key: ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-nextjs-

      - name: Configure GitHub Pages
        uses: actions/configure-pages@v4
        with:
          # Automatically inject basePath in your Next.js configuration file and disable
          # server side image optimization (https://nextjs.org/docs/api-reference/next/image#unoptimized).
          #
          # You may remove this line if you want to manage the configuration yourself.
          static_site_generator: next
          enablement: true

      - name: Install dependencies
        run: npm ci

      - name: Build Next.js app
        run: |
          echo "ðŸ”¨ Building Next.js application..."
          npm run build
          echo "âœ… Next.js build completed successfully"

      - name: Upload static site
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./out

  deploy:
    needs: build
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

      - name: Deployment complete
        run: |
          echo "Deployment completed successfully!"
          echo "Site URL: ${{ steps.deployment.outputs.page_url }}"
